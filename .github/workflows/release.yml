name: "Release"

on:
  push:
    branches:
      - main

jobs:
  docker:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2

      - name: "🔧 setup buildx"
        uses: docker/setup-buildx-action@v1

      - name: "📦 docker build"
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_IMAGE }}:latest
          outputs: type=docker,dest=/tmp/docker.tar
          push: false

      - name: "📂 docker artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: docker
          path: /tmp/docker.tar

  build:
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2

      - name: "🔧 setup node"
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 16

      - name: "🔧 setup cache"
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/npm-shrinkwrap.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: "🔧 install npm@7"
        run: npm i -g npm@7

      - name: "📦 install dependencies"
        run: npm ci

      - name: "🚀 static app"
        run: npm run build

      - name: "📂 production artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  release:
    environment: production
    name: Release
    needs:
      - docker
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "🔧 setup node"
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 16

      - name: "🔧 setup cache"
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/npm-shrinkwrap.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: "🔧 install npm@7"
        run: npm i -g npm@7

      - name: "📦 install dependencies"
        run: npm ci

      - name: "📂 download artifacts"
        uses: actions/download-artifact@v2
        with:
          name: docker
          path: /tmp

      - name: "📦 load tag"
        run: |
          docker load --input /tmp/docker.tar
          docker image ls -a
          echo "REPO_NAME=$(echo "${{ github.repository }}" | cut -d "/" -f 2)" >> $GITHUB_ENV

      - name: "🚀 release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          GIT_AUTHOR_NAME: ${{ github.event.commits[0].author.username }}
          GIT_AUTHOR_EMAIL: ${{ github.event.commits[0].author.email }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
        run: npx semantic-release

  deploy:
    name: Deploy
    needs:
      - build
      - release
    runs-on: ubuntu-latest
    steps:
      - name: "📂 download artifacts"
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: "🚀 deploy static"
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          commit_message: ${{ github.event.head_commit.message }}
          enable_jekyll: false
          cname: open-sauced-graphiql-explorer-test.vortex.name
